{
  "shellscript-dir-and-file-exists": {
    "prefix": [
      "shellscript-dir-and-file-exists",
      "sdafe"
    ],
    "scope": "shellscript",
    "body": [
      "if [[ ! -d \"$1\" || ! -f \"$2\" ]]; then",
      "  echo \"dir=$1, file=$2 - does not exist\"",
      "  # mkdir -pv $1",
      "  # touch $2",
      "fi"
    ],
    "description": "shellscript-dir-and-file-exists"
  },
  "shellscript-dir-exists": {
    "prefix": [
      "shellscript-dir-exists",
      "sde"
    ],
    "scope": "shellscript",
    "body": [
      "if [[ ! -d \"$1\" ]]; then",
      "  echo \"dir=$1 - does not exist\"",
      "  # mkdir -pv $1",
      "fi"
    ],
    "description": "shellscript-dir-exists"
  },
  "shellscript-file-exists": {
    "prefix": [
      "shellscript-file-exists",
      "sfe"
    ],
    "scope": "shellscript",
    "body": [
      "if [[ ! -f \"$1\" ]]; then",
      "  echo \"file=$1 - does not exist\"",
      "  # mkdir -pv $1",
      "fi"
    ],
    "description": "shellscript-file-exists"
  },
  "shellscript-binary-exists": {
    "prefix": [
      "shellscript-binary-exists",
      "sbe"
    ],
    "scope": "shellscript",
    "body": [
      "if [[ ! -x \"$(command -v $1 2>/dev/null)\" ]]; then",
      "  echo \"$(tput bold; tput setaf 1)ERROR:$(tput sgr0) NOT FOUND - command=$1\"",
      "else",
      "  echo \"$(tput bold; tput setaf 2)INFO:$(tput sgr0) FOUND - command=$1, path=$(command -v $1 2>/dev/null)\"",
      "fi"
    ],
    "description": "shellscript-binary-exists"
  },
  "shellscript-new-file": {
    "prefix": [
      "shellscript-new-file",
      "snf"
    ],
    "scope": "shellscript",
    "body": [
      "#!/usr/bin/env bash",
      "# Usage: ${TM_FILENAME}",
      "#",
      "# ${1:Documentation: ${2:TODO}}",
      "",
      "set -euf \\",
      "  -o nounset \\",
      "  -o errexit \\",
      "  -o errtrace \\",
      "  -o noclobber \\",
      "  -o pipefail \\",
      "  -o posix \\",
      "  -o functrace \\",
      "  -o notify",
      "",
      "shopt -s \\",
      "  extglob \\",
      "  globstar \\",
      "  nullglob \\",
      "  failglob \\",
      "  gnu_errfmt \\",
      "  localvar_unset \\",
      "  dotglob \\",
      "  xpg_echo",
      "",
      "function print_separators() {",
      "  printf -- '-%.0s' $(seq 1 $(($(tput cols) - 1))) $'\\n'",
      "}",
      "",
      "print_separators",
      "${3:echo \"$(basename \"\\$0\"): started\" }",
      "$0",
      "print_separators"
    ],
    "description": "A Bash shell script."
  }
}
